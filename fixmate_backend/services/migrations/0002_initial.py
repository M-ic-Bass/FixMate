# Generated by Django 5.0.6 on 2025-09-12 17:45

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0003_initial'),
        ('services', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name='review',
            name='customer',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='given_reviews', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='review',
            name='job',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='review', to='jobs.job'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='categories',
            field=models.ManyToManyField(related_name='providers', to='services.servicecategory'),
        ),
        migrations.AddField(
            model_name='serviceprovider',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='service_provider', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='review',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='services.serviceprovider'),
        ),
        migrations.AddField(
            model_name='provideravailability',
            name='provider',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='availability', to='services.serviceprovider'),
        ),
        migrations.AlterUniqueTogether(
            name='review',
            unique_together={('provider', 'customer', 'job')},
        ),
        migrations.AlterUniqueTogether(
            name='provideravailability',
            unique_together={('provider', 'day_of_week')},
        ),
    ]
